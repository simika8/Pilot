// <auto-generated />
using System;
using Bl;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Bl.Migrations
{
    [DbContext(typeof(NexxtPilotContext))]
    [Migration("20211202115044_24")]
    partial class _24
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Models.DemoInventoryStock", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<Guid?>("DemoProductId")
                        .HasColumnType("uuid")
                        .HasColumnName("demoproductid");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uuid")
                        .HasColumnName("productid");

                    b.Property<double>("Quantity")
                        .HasColumnType("double precision")
                        .HasColumnName("quantity");

                    b.Property<Guid>("StoreId")
                        .HasColumnType("uuid")
                        .HasColumnName("storeid");

                    b.HasKey("Id")
                        .HasName("pk_demoinventorystocks");

                    b.HasIndex("DemoProductId")
                        .HasDatabaseName("ix_demoinventorystocks_demoproductid");

                    b.ToTable("demoinventorystocks", (string)null);
                });

            modelBuilder.Entity("Models.DemoProduct", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<bool>("Active")
                        .HasColumnType("boolean")
                        .HasColumnName("active");

                    b.Property<Guid?>("ExtProductId")
                        .HasColumnType("uuid")
                        .HasColumnName("extproductid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<double?>("Price")
                        .HasColumnType("double precision")
                        .HasColumnName("price");

                    b.Property<int>("Rating")
                        .HasColumnType("integer")
                        .HasColumnName("rating");

                    b.Property<DateTime?>("ReleaseDate")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("releasedate");

                    b.Property<int>("Type")
                        .HasColumnType("integer")
                        .HasColumnName("type");

                    b.HasKey("Id")
                        .HasName("pk_demoproducts");

                    b.HasIndex("ExtProductId")
                        .HasDatabaseName("ix_demoproducts_extproductid");

                    b.ToTable("demoproducts", (string)null);
                });

            modelBuilder.Entity("Models.DemoProductExt", b =>
                {
                    b.Property<Guid>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("productid");

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<double?>("MinimumStock")
                        .HasColumnType("double precision")
                        .HasColumnName("minimumstock");

                    b.HasKey("ProductId")
                        .HasName("pk_demoproductexts");

                    b.ToTable("demoproductexts", (string)null);
                });

            modelBuilder.Entity("Models.DemoInventoryStock", b =>
                {
                    b.HasOne("Models.DemoProduct", null)
                        .WithMany("Stocks")
                        .HasForeignKey("DemoProductId")
                        .HasConstraintName("fk_demoinventorystocks_demoproducts_demoproductid");
                });

            modelBuilder.Entity("Models.DemoProduct", b =>
                {
                    b.HasOne("Models.DemoProductExt", "Ext")
                        .WithMany()
                        .HasForeignKey("ExtProductId")
                        .HasConstraintName("fk_demoproducts_demoproductext_exttempid");

                    b.Navigation("Ext");
                });

            modelBuilder.Entity("Models.DemoProduct", b =>
                {
                    b.Navigation("Stocks");
                });
#pragma warning restore 612, 618
        }
    }
}
