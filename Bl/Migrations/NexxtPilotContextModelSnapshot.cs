// <auto-generated />
using System;
using Bl;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Bl.Migrations
{
    [DbContext(typeof(NexxtPilotContext))]
    partial class NexxtPilotContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Models.DemoInventoryStock", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("DemoProductId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uuid");

                    b.Property<double>("Quantity")
                        .HasColumnType("double precision");

                    b.Property<Guid>("StoreId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("DemoProductId");

                    b.ToTable("DemoInventoryStock");
                });

            modelBuilder.Entity("Models.DemoProduct", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<bool>("Active")
                        .HasColumnType("boolean");

                    b.Property<Guid?>("ExtProductId")
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<double?>("Price")
                        .HasColumnType("double precision");

                    b.Property<int>("Rating")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("ReleaseDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("Type")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ExtProductId");

                    b.ToTable("DemoProducts");
                });

            modelBuilder.Entity("Models.DemoProductExt", b =>
                {
                    b.Property<Guid>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<double?>("MinimumStock")
                        .HasColumnType("double precision");

                    b.HasKey("ProductId");

                    b.ToTable("DemoProductExt");
                });

            modelBuilder.Entity("Models.DemoInventoryStock", b =>
                {
                    b.HasOne("Models.DemoProduct", null)
                        .WithMany("Stocks")
                        .HasForeignKey("DemoProductId");
                });

            modelBuilder.Entity("Models.DemoProduct", b =>
                {
                    b.HasOne("Models.DemoProductExt", "Ext")
                        .WithMany()
                        .HasForeignKey("ExtProductId");

                    b.Navigation("Ext");
                });

            modelBuilder.Entity("Models.DemoProduct", b =>
                {
                    b.Navigation("Stocks");
                });
#pragma warning restore 612, 618
        }
    }
}
